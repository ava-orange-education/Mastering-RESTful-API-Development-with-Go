package main

import (
    "fmt"
    "io"
    "net/http"
    "os"
)

func uploadFileHandler(w http.ResponseWriter, r *http.Request) {
    r.ParseMultipartForm(10 << 20) // 10 MB

    file, header, err := r.FormFile("file") // "file" is the key for the file input
    if err != nil {
        http.Error(w, "Failed to retrieve file", http.StatusBadRequest)
        return
    }
    defer file.Close()

    destination, err := os.Create("./uploads/" + header.Filename)
    if err != nil {
        http.Error(w, "Failed to save file", http.StatusInternalServerError)
        return
    }
    defer destination.Close()

    // Copy the content from the uploaded file to the destination file
    _, err = io.Copy(destination, file)
    if err != nil {
        http.Error(w, "Error while saving file", http.StatusInternalServerError)
        return
    }

    fmt.Fprintf(w, "File uploaded successfully: %s", header.Filename)
}

func main() {
    http.HandleFunc("/upload", uploadFileHandler)
    http.ListenAndServe(":8080", nil)
}
